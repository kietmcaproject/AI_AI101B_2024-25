# -*- coding: utf-8 -*-
"""HealthCare.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A1z14hyLhsn4pcf-PRupM53XBz0Kv825
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the Healthcare Dataset
data = pd.read_csv("/content/Healthcare.csv")

# Display dataset information
print("Dataset Overview:")
print(data.head())  # Show first few rows
print("\nData Info:")
print(data.info())  # Display column data types
print("\nMissing Values:")
print(data.isnull().sum())  # Count missing values

# Fill missing values
numeric_cols = data.select_dtypes(include=[np.number]).columns
categorical_cols = data.select_dtypes(include=['object']).columns

# Fill missing numerical values with median
data[numeric_cols] = data[numeric_cols].fillna(data[numeric_cols].median())

# Fill missing categorical values with mode
for col in categorical_cols:
    data[col] = data[col].fillna(data[col].mode()[0])

# Display summary statistics
print("\nSummary Statistics:")
print(data.describe())

# 1. Age Distribution of Patients
if 'Age' in data.columns:
    plt.figure(figsize=(8,5))
    sns.histplot(data['Age'], bins=30, kde=True, color="blue")
    plt.title("Age Distribution of Patients")
    plt.xlabel("Age")
    plt.ylabel("Count")
    plt.show()

# 2. Gender Distribution
if 'Gender' in data.columns:
    plt.figure(figsize=(6,4))
    sns.countplot(x=data['Gender'], palette="Set2")
    plt.title("Gender Distribution")
    plt.xlabel("Gender")
    plt.ylabel("Count")
    plt.show()

# 3. Most Common Diseases
if 'Disease' in data.columns:
    plt.figure(figsize=(10,5))
    sns.countplot(y=data['Disease'], order=data['Disease'].value_counts().index, palette="coolwarm")
    plt.title("Most Common Diseases in Patients")
    plt.xlabel("Count")
    plt.ylabel("Disease")
    plt.show()

# 4. Medication Distribution
if 'Medication' in data.columns:
    plt.figure(figsize=(10,5))
    sns.countplot(y=data['Medication'], order=data['Medication'].value_counts().index[:10], palette="Blues_r")
    plt.title("Top 10 Medications Prescribed")
    plt.xlabel("Count")
    plt.ylabel("Medication")
    plt.show()

# 5. Correlation Heatmap for Numeric Data
if len(numeric_cols) > 1:
    plt.figure(figsize=(10,6))
    sns.heatmap(data[numeric_cols].corr(), annot=True, cmap="coolwarm", fmt=".2f")
    plt.title("Correlation Matrix of Healthcare Data")
    plt.show()

# 6. Test Results Distribution
if 'Test Result' in data.columns:
    plt.figure(figsize=(6,4))
    sns.countplot(x=data['Test Result'], palette="viridis")
    plt.title("Distribution of Test Results")
    plt.xlabel("Test Result")
    plt.ylabel("Count")
    plt.show()